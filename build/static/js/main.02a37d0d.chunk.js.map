{"version":3,"sources":["Components/chimes.mp3","Components/fiftenChime.mp3","Components/ListComp.js","Components/AddLocComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListComp","props","useEffect","getList","interval","setInterval","clearInterval","console","log","list","map","loc","i","className","key","txt","countMinutes","moment","diff","Date","countHours","add","format","minHourTextFormat","expires","name","x","y","description","url","chimes","playStatus","play","forEach","Sound","status","PLAYING","STOPPED","checkPlaySixty","fifteenChime","checkPlayFifteen","AddLocComp","useState","hours","minutes","dataObj","setDataObj","stateSetter","val","value","onChange","e","target","placeholder","type","onClick","obj","Axios","post","then","resp","catch","err","error","alert","saveLocation","App","showList","setShowList","setList","get","today","sortedArr","Object","keys","data","ky","isBefore","push","sort","a","b","style","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.02a37d0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chimes.e1ce971a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/fiftenChime.ed5f95e4.mp3\";","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Sound from 'react-sound';\nimport chimes from './chimes.mp3'\nimport fifteenChime from './fiftenChime.mp3';\n\n \nconst ListComp = (props) => {\n\n    useEffect(() => {\n        props.getList();\n        const interval = setInterval(() => {\n            props.getList();\n        }, 600000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const minHourTextFormat = (txt) => {\n        const countMinutes = moment(txt, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes');\n        if(moment(txt, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes') > 60) {\n            const countHours = moment(txt, 'YYYYMMDDHHmm').diff(moment(new Date()), 'hours');\n            return `${countHours} HOURS! At ${moment(new Date()).add(countMinutes, 'minutes').format('hh:mma, MM/DD')}`\n        } else {\n            return `${countMinutes} MINUTES! at ${moment(new Date()).add(countMinutes, 'minutes').format('hh:mma, MM/DD')}`\n        }\n    }\n\n    const checkPlaySixty = () => {\n        let play = false;\n        props.list.forEach(loc => {\n            if (moment(loc.expires, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes') < 60\n            && moment(loc.expires, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes') > 15\n            ) {\n                play = true;\n            }\n        })\n        if (play) {\n            return Sound.status.PLAYING\n        } else {\n            return Sound.status.STOPPED;\n        }\n    }\n\n    const checkPlayFifteen = () => {\n        let play = false;\n        props.list.forEach(loc => {\n            if (moment(loc.expires, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes') < 15\n            && moment(loc.expires, 'YYYYMMDDHHmm').diff(moment(new Date()), 'minutes') > 0\n            ) {\n                play = true;\n            }\n        })\n        if (play) {\n            return Sound.status.PLAYING\n        } else {\n            return Sound.status.STOPPED;\n        }\n    }\n\n\n\nconsole.log(\"props list is: \", props.list)\n    return (\n        <div>\n            <ul>\n                {props.list.map((loc, i) => {\n                    return (\n                        <li className=\"align-left m-btm-15\" key={i}>\n                            EXPIRES IN {minHourTextFormat(loc.expires)}\n                            <ul className=\"align-left\">\n                                <li className=\"align-left\">Owned by: {loc.name}</li>\n                                <li className=\"align-left\">Located at ({loc.x}, {loc.y})</li>\n                                <li className=\"align-left\">Notes: {loc.description}</li>\n                            </ul>\n                        </li>\n                    )\n                })}\n            </ul>\n            <Sound \n             url={chimes}\n             playStatus={checkPlaySixty()}\n            />\n            <Sound \n             url={fifteenChime}\n             playStatus={checkPlayFifteen()}\n            />\n        </div>\n    )\n}\nexport default ListComp","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\n\n \nconst AddLocComp = (props) => {\n    const [dataObj, setDataObj] = useState({\n        name: '',\n        x: '',\n        y: '',\n        hours: 0,\n        minutes: 0,\n        description: ''\n    });\n\n    const saveLocation = () => {\n        if(dataObj.x && dataObj.y && dataObj.minutes && dataObj.name){\n            let obj = dataObj\n            const now = moment(new Date());\n            const expires = now.add(dataObj.hours, 'hours').add(dataObj.minutes, 'minutes').format('YYYYMMDDHHmm')\n            console.log('expires at: ', expires)\n            obj.expires = expires;\n            Axios.post('http://192.168.1.100:3030/api/addLocation', obj)\n            .then(resp => {\n                console.log(\"save done!\");\n                setDataObj({\n                    name: '',\n                    x: '',\n                    y: '',\n                    hours: 0,\n                    minutes: 0,\n                    description: ''\n                })\n                props.getList();\n            })\n            .catch(err => console.error(\"Error saving loc: \", err))\n        } else {\n            alert(\"Finish filling out form\")\n        }\n    }\n\n    const stateSetter = (val, key) => {\n        setDataObj({...dataObj, [key]: val})\n    }\n\n    return (\n        <div className=\"flex-col-left\">\n            <span>Owner name:</span>\n            <input value={dataObj.name} onChange={e => stateSetter(e.target.value, 'name')} className=\"m-btm-15\" placeholder=\"base owner name\" />\n\n            <span>X loc:</span>\n            <input value={dataObj.x} onChange={e => stateSetter(e.target.value, 'x')} className=\"m-btm-15\" placeholder=\"xloc\"/>\n\n            <span>Y loc:</span>\n            <input value={dataObj.y} onChange={e => stateSetter(e.target.value, 'y')} className=\"m-btm-15\" placeholder=\"yloc\"/>\n\n            <span>Hours:</span>\n            <input value={dataObj.hours} type=\"number\" onChange={e => stateSetter(e.target.value, 'hours')} className=\"m-btm-15\" placeholder=\"Hours\"/>\n\n            <span>Minutes:</span>\n            <input value={dataObj.minutes} type=\"number\" onChange={e => stateSetter(e.target.value, 'minutes')} className=\"m-btm-15\" placeholder=\"Minutes\"/>\n\n            <span>Description/notes:</span>\n            <input value={dataObj.description} onChange={e => stateSetter(e.target.value, 'description')} className=\"m-btm-15\" placeholder=\"Where in the box is it?\"/>\n\n            <button onClick={() => saveLocation()}>Save</button>\n        </div>\n    )\n}\nexport default AddLocComp","import React, { useState } from 'react';\nimport moment from 'moment';\nimport './App.css';\nimport ListComp from './Components/ListComp';\nimport AddLocComp from './Components/AddLocComp';\nimport Axios from 'axios';\n\nfunction App() {\n  const [showList, setShowList] = useState(true);\n  const [list, setList] = useState([])\n\n  const getList = () => {\n    Axios.get('http://192.168.1.100:3030/api/getLocations')\n    .then(resp => {\n      // setList(resp.data)\n      // sort((a, b) => b.date - a.date)\n      const today = moment(new Date());\n      let sortedArr = []\n      Object.keys(resp.data).forEach(ky => {\n        if(today.isBefore(moment(resp.data[ky].expires, 'YYYYMMDDHHmm'))) {\n          sortedArr.push(resp.data[ky])\n        }\n      })\n      console.log(\"sorted arr befor sorting: \", sortedArr)\n      sortedArr = sortedArr.sort((a, b)  => moment(a.expires, 'YYYYMMDDHHmm').diff(moment(today)) - moment(b.expires, 'YYYYMMDDHHmm').diff(moment(today)));\n      setList(sortedArr)\n      // console.log(\"response here: \", resp)\n    })\n    .catch(err => console.log(\"error: \", err))\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"flex-row-space-between border-btm w-100-vw\">\n        <h1 className=\"w-49-vw h-83\" style={{margin: 0}} onClick={() => setShowList(false)}>ADD LOC</h1>\n        <div className=\"w-3 h-83 bg-black\"/>\n        <h1 className=\"w-49-vw h-83\" style={{margin: 0}} onClick={() => setShowList(true)}>LOC LIST</h1>\n      </div>\n      <div>\n        {\n          showList ? \n            <ListComp list={list} getList={getList}/> :\n            <AddLocComp getList={getList}/>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}